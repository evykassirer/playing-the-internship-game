{
    "docs": [
        {
            "location": "/", 
            "text": "Playing the Internship Game\n\n\nThe rules, tips, and tricks I've learned on how to approach tech internships\n\n\nI've collected this pile of advice thanks to many folks with more experience than me, or who came up with cool ideas I might not have thought of. These things give me an advantage and I think it's unfair that others shouldn't have that same advantage if they're motivated enough to look for advice and just don't know the same people I do. So I'm putting as much as I can remember here, and hoping that if you read this and it helps you, that you will pass this knowledge on to help others too.\n\n\nThis is just advice, a collection of things people have said that I've found helpful. It might not actually be the best advice, and it might not work for you. My best advice is to think critically about all the advice you get, and only do things when you have a good idea of why it might help you and think it's your best option.\n\n\nI also want to note that just because I've learned that something is the most effective thing to do to get a job doesn't mean I think should be - the interview processes many companies use aren't necessarily fair or effective for evaluating how good of an employee you'd be. That's why this is a game. They create the game and you learn to play it well, and that's how you get jobs. It sucks, but I figured you should at least know how to play it well too.\n\n\nIf you have a question, \nopen an issue\n with it and I'll try to add the answer in here somewhere. If you'd like to ask a question anonymously, or just less publicly, you can also fill out \nthis form\n\n\nIf you have advice to add, please feel free to open a pull request!\n\n\nCreators\n\n\n\n\nEvy Kassirer\n\n\nWrote all the content and came up with the idea\n\n\n\n\n\n\nRonak Shah\n\n\nCreated the website", 
            "title": "Home"
        }, 
        {
            "location": "/#playing-the-internship-game", 
            "text": "", 
            "title": "Playing the Internship Game"
        }, 
        {
            "location": "/#the-rules-tips-and-tricks-ive-learned-on-how-to-approach-tech-internships", 
            "text": "I've collected this pile of advice thanks to many folks with more experience than me, or who came up with cool ideas I might not have thought of. These things give me an advantage and I think it's unfair that others shouldn't have that same advantage if they're motivated enough to look for advice and just don't know the same people I do. So I'm putting as much as I can remember here, and hoping that if you read this and it helps you, that you will pass this knowledge on to help others too.  This is just advice, a collection of things people have said that I've found helpful. It might not actually be the best advice, and it might not work for you. My best advice is to think critically about all the advice you get, and only do things when you have a good idea of why it might help you and think it's your best option.  I also want to note that just because I've learned that something is the most effective thing to do to get a job doesn't mean I think should be - the interview processes many companies use aren't necessarily fair or effective for evaluating how good of an employee you'd be. That's why this is a game. They create the game and you learn to play it well, and that's how you get jobs. It sucks, but I figured you should at least know how to play it well too.  If you have a question,  open an issue  with it and I'll try to add the answer in here somewhere. If you'd like to ask a question anonymously, or just less publicly, you can also fill out  this form  If you have advice to add, please feel free to open a pull request!", 
            "title": "The rules, tips, and tricks I've learned on how to approach tech internships"
        }, 
        {
            "location": "/#creators", 
            "text": "Evy Kassirer  Wrote all the content and came up with the idea    Ronak Shah  Created the website", 
            "title": "Creators"
        }, 
        {
            "location": "/resources/", 
            "text": "other general guides\n\n\nhttps://github.com/cassidoo/getting-a-gig\n\n\nLSH: How To Prep for the Job Hunt https://www.youtube.com/watch?v=N__a2v8nVbE\napp=desktop", 
            "title": "Resources"
        }, 
        {
            "location": "/resources/#other-general-guides", 
            "text": "https://github.com/cassidoo/getting-a-gig  LSH: How To Prep for the Job Hunt https://www.youtube.com/watch?v=N__a2v8nVbE app=desktop", 
            "title": "other general guides"
        }, 
        {
            "location": "/After-The-Offer/salary_and_negotiating/", 
            "text": "Salary and negotiation\n\n\nIn general, it's a lot easier to be picky about salary once you already have job experience. If this is your first job, and you can afford to not worry about how much make, I would recommend just taking what you're offered.\n\n\nOne thing to remember is cost of living. \nIn some cities the cost of living is really high\n. I've heard stories of people working for startups in SF and making net negative money after paying rent.\n\n\nIf you have work experience and you're being offered less than you've made before, I would consider letting the company know that: \"I'm really excited about your offer, but I just wanted to let you know that in the past I've been paid \n_\n. Would it be possible to bring my compensation to a similar level?\"\n\n\nAlso, if you have another offer that's offering more money, you can let the other companies know that - sometimes they will match it!\n\n\nWhen I ask for more money, I not to make it seem like it's a strong deciding factor for me (because it's not) but that it's just something I'm thinking about.\n\n\nIt's better to talk about salary on the phone (I know, phone calls suck - but this is how people do it and it'll probably give you the best chance. Write a script, it'll help)\n\n\nCheck out data about salaries:\n\n\n\n\nglassdoor\n\n\ntop tech internship offers, 2016\n\n\nnew grad salaries", 
            "title": "Salary and negotiating"
        }, 
        {
            "location": "/After-The-Offer/salary_and_negotiating/#salary-and-negotiation", 
            "text": "In general, it's a lot easier to be picky about salary once you already have job experience. If this is your first job, and you can afford to not worry about how much make, I would recommend just taking what you're offered.  One thing to remember is cost of living.  In some cities the cost of living is really high . I've heard stories of people working for startups in SF and making net negative money after paying rent.  If you have work experience and you're being offered less than you've made before, I would consider letting the company know that: \"I'm really excited about your offer, but I just wanted to let you know that in the past I've been paid  _ . Would it be possible to bring my compensation to a similar level?\"  Also, if you have another offer that's offering more money, you can let the other companies know that - sometimes they will match it!  When I ask for more money, I not to make it seem like it's a strong deciding factor for me (because it's not) but that it's just something I'm thinking about.  It's better to talk about salary on the phone (I know, phone calls suck - but this is how people do it and it'll probably give you the best chance. Write a script, it'll help)  Check out data about salaries:   glassdoor  top tech internship offers, 2016  new grad salaries", 
            "title": "Salary and negotiation"
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/", 
            "text": "Finding companies to apply to\n\n\nLists of hiring companies\n\n\nYou can often find lists online of companies hiring for summer internships. Internships at other times of the year can be trickier, but you can always email companies that do summer internships and ask if they'll hire at other times of the year.\n\n\n\n\nhttp://www.intern.supply/\n\n\nhttps://www.facebook.com/careers/university/?refid=8\ntn\n=R\n\n\nResearch: https://www.nsf.gov/crssprgm/reu/list_result.jsp?unitid=5049\n\n\nhttps://www.indeed.com/\n\n\nhttps://breakoutlist.com/all\n\n\nhttps://www.wayup.com/\n\n\nTODO: add some links to lists people often use (idk, can some people recommend? I haven't used these much)\n\n\n\n\nJoin Facebook groups (and mailing lists, slack channels, whatever is out there) that have job postings.\n\n\n\n\nhttps://www.facebook.com/groups/HHinternships/?ref=br_rs\n\n\nhttps://www.facebook.com/groups/733654363389653/?ref=br_rs\n\n\nhttps://www.facebook.com/groups/ncwandintern/?ref=br_rs\n\n\netc... you should also check out intern groups relevant to your school! they probably exist\n\n\n\n\nGoogle it\n\n\nSometimes I just google \"hiring interns\" (usually adding a preferred location and/or an industry I'd like to work in) and see what shows up! This works pretty well too\n\n\nYour friends\n\n\nAsk your friends where they've worked and what companies they'd recommend and how to apply to there. I bet they'd be happy to tell you about their experience and help you through the application process!\n\n\nYour peers\n\n\nYou can also ask advice from people in your classes or that go to your school that you don't know! Be mindful that they might not have time to help you out, but my opinion is that it doesn't hurt to ask as long as you're okay with the possibility that they don't have the time/energy/interest to reply.", 
            "title": "Finding companies to apply to"
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/#finding-companies-to-apply-to", 
            "text": "", 
            "title": "Finding companies to apply to"
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/#lists-of-hiring-companies", 
            "text": "You can often find lists online of companies hiring for summer internships. Internships at other times of the year can be trickier, but you can always email companies that do summer internships and ask if they'll hire at other times of the year.   http://www.intern.supply/  https://www.facebook.com/careers/university/?refid=8 tn =R  Research: https://www.nsf.gov/crssprgm/reu/list_result.jsp?unitid=5049  https://www.indeed.com/  https://breakoutlist.com/all  https://www.wayup.com/  TODO: add some links to lists people often use (idk, can some people recommend? I haven't used these much)", 
            "title": "Lists of hiring companies"
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/#join-facebook-groups-and-mailing-lists-slack-channels-whatever-is-out-there-that-have-job-postings", 
            "text": "https://www.facebook.com/groups/HHinternships/?ref=br_rs  https://www.facebook.com/groups/733654363389653/?ref=br_rs  https://www.facebook.com/groups/ncwandintern/?ref=br_rs  etc... you should also check out intern groups relevant to your school! they probably exist", 
            "title": "Join Facebook groups (and mailing lists, slack channels, whatever is out there) that have job postings."
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/#google-it", 
            "text": "Sometimes I just google \"hiring interns\" (usually adding a preferred location and/or an industry I'd like to work in) and see what shows up! This works pretty well too", 
            "title": "Google it"
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/#your-friends", 
            "text": "Ask your friends where they've worked and what companies they'd recommend and how to apply to there. I bet they'd be happy to tell you about their experience and help you through the application process!", 
            "title": "Your friends"
        }, 
        {
            "location": "/Applying/finding_companies_to_apply_to/#your-peers", 
            "text": "You can also ask advice from people in your classes or that go to your school that you don't know! Be mindful that they might not have time to help you out, but my opinion is that it doesn't hurt to ask as long as you're okay with the possibility that they don't have the time/energy/interest to reply.", 
            "title": "Your peers"
        }, 
        {
            "location": "/Applying/how_to_apply/", 
            "text": "How to apply\n\n\nOnline form applications\n\n\nSome companies have a form you fill out and attach your resume to, and this is how you apply to their jobs. Sometimes this is the only way to apply to a company, because they want to keep all the applications together in their system.\n\n\nOften times, applying through this method lowers your liklihood of them getting back to you. Many many many people are applying for internships and it's a lot of work to get through all those resumes and select who to interview. Often many applications are just never looked at.\n\n\nApplying online is definitely worth a shot, but not my recommended method if you can avoid it.\n\n\nTalk to the recruiter (or an engineer) in person somehow\n\n\nThis can be at an info session, career fair, intern event, open house, etc. If you can talk to someone that will remember you and give you priority in hiring (in the huge pile of applications they have to go through) then you've succeeded.\n\n\nBut realize that every other student they're talking to is also trying to be remembered. Do what you can to make yourself stand out. Maybe send a followup email to say it was nice to meet them and let them know you're excited about applying there.\n\n\nEmail/message someone that works there\n\n\nIdeally this is someone you already met before, but it doesn't have to be. I've gotten an internship from messaging someone on Facebook (with mutual friends) that worked somewhere I wanted to work. I've gotten an internship from emailing the VP engineering at a company who I'd never talked to before.\n\n\nYou can use LinkedIn (though I try to avoid it if possible). Email is probably best.\n\n\nHere are some tips for emails:\n\n\n\n\nIf you don't know who to email, or what their email address is, follow these steps:\n\n\nIf you know someone that works there, see if they can tell you who to email and what their contact is\n\n\nIf not, go on their website and look for a team page. If you can figure out who their lead engineer or recruiter is, you can try emailing them.\n\n\nIf there's nothing there, go on LinkedIn and search for people that work at that company\n\n\nIf all you have is a name but not the email, go to a email verifier site (e.g. \nhttps://email-checker.net/\n or \nhttp://verify-email.org/\n) and see if firstName@company.com works (most of time that'll be it!) I also like to check that asdasdf@company.com doesn't work since sometimes any email at their domain will come out positive\n\n\nTry to make the subject line stand out while still including internship in it. Remember, \"summer internship at \n\" is likely to be everyone else's email subject too. I like to include \"Waterloo\" in the subject because a lot of companies know and love Waterloo (and this gives me a lot of privilege in applying to jobs!)\n\n\nThe body of the email is the cover letter. And then you attach your resume to it. \nI really like this Quora example of what the email can look like\n\n\nYou can use email tracker extensions (if you do a Google search for that, you should get a few to choose from) to fairly reliably tell you when people open your emails. Sometimes the person I send an email to opens it, reads it, reads it later that day, then never replies. In that scenario I'll send a followup email saying I know their inbox is busy and so I just want to see if they have any updates for me. If I can see that they haven't replied to me but keep opening the email every day, I don't send the followup because I know they're thinking about me still\n\n\n\n\nReferrals\n\n\nIf a friend can refer to you a company (maybe a company they've worked) this can be a great way to be given priority over the general mass of candidates.\n\n\nHowever - I tend to not ask for referals or give them because I don't work technically with many of my friends. I can vouch for them being kind and thoughtful and hard working (and same for them about me) but neither of us really know how well the other works on technical things and so unless they're a close friend I'd probably feel weird referring them.\n\n\nWhat I \nhave\n done (and asked for) is introduced my friends to recruiters, in sort of a \"here's my friend they're pretty cool and also interested in your company\" and less of a \"I recommend this person to work here\" kind of way. Maybe this is what most referals are anyways, but there you go.", 
            "title": "How to apply"
        }, 
        {
            "location": "/Applying/how_to_apply/#how-to-apply", 
            "text": "", 
            "title": "How to apply"
        }, 
        {
            "location": "/Applying/how_to_apply/#online-form-applications", 
            "text": "Some companies have a form you fill out and attach your resume to, and this is how you apply to their jobs. Sometimes this is the only way to apply to a company, because they want to keep all the applications together in their system.  Often times, applying through this method lowers your liklihood of them getting back to you. Many many many people are applying for internships and it's a lot of work to get through all those resumes and select who to interview. Often many applications are just never looked at.  Applying online is definitely worth a shot, but not my recommended method if you can avoid it.", 
            "title": "Online form applications"
        }, 
        {
            "location": "/Applying/how_to_apply/#talk-to-the-recruiter-or-an-engineer-in-person-somehow", 
            "text": "This can be at an info session, career fair, intern event, open house, etc. If you can talk to someone that will remember you and give you priority in hiring (in the huge pile of applications they have to go through) then you've succeeded.  But realize that every other student they're talking to is also trying to be remembered. Do what you can to make yourself stand out. Maybe send a followup email to say it was nice to meet them and let them know you're excited about applying there.", 
            "title": "Talk to the recruiter (or an engineer) in person somehow"
        }, 
        {
            "location": "/Applying/how_to_apply/#emailmessage-someone-that-works-there", 
            "text": "Ideally this is someone you already met before, but it doesn't have to be. I've gotten an internship from messaging someone on Facebook (with mutual friends) that worked somewhere I wanted to work. I've gotten an internship from emailing the VP engineering at a company who I'd never talked to before.  You can use LinkedIn (though I try to avoid it if possible). Email is probably best.  Here are some tips for emails:   If you don't know who to email, or what their email address is, follow these steps:  If you know someone that works there, see if they can tell you who to email and what their contact is  If not, go on their website and look for a team page. If you can figure out who their lead engineer or recruiter is, you can try emailing them.  If there's nothing there, go on LinkedIn and search for people that work at that company  If all you have is a name but not the email, go to a email verifier site (e.g.  https://email-checker.net/  or  http://verify-email.org/ ) and see if firstName@company.com works (most of time that'll be it!) I also like to check that asdasdf@company.com doesn't work since sometimes any email at their domain will come out positive  Try to make the subject line stand out while still including internship in it. Remember, \"summer internship at  \" is likely to be everyone else's email subject too. I like to include \"Waterloo\" in the subject because a lot of companies know and love Waterloo (and this gives me a lot of privilege in applying to jobs!)  The body of the email is the cover letter. And then you attach your resume to it.  I really like this Quora example of what the email can look like  You can use email tracker extensions (if you do a Google search for that, you should get a few to choose from) to fairly reliably tell you when people open your emails. Sometimes the person I send an email to opens it, reads it, reads it later that day, then never replies. In that scenario I'll send a followup email saying I know their inbox is busy and so I just want to see if they have any updates for me. If I can see that they haven't replied to me but keep opening the email every day, I don't send the followup because I know they're thinking about me still", 
            "title": "Email/message someone that works there"
        }, 
        {
            "location": "/Applying/how_to_apply/#referrals", 
            "text": "If a friend can refer to you a company (maybe a company they've worked) this can be a great way to be given priority over the general mass of candidates.  However - I tend to not ask for referals or give them because I don't work technically with many of my friends. I can vouch for them being kind and thoughtful and hard working (and same for them about me) but neither of us really know how well the other works on technical things and so unless they're a close friend I'd probably feel weird referring them.  What I  have  done (and asked for) is introduced my friends to recruiters, in sort of a \"here's my friend they're pretty cool and also interested in your company\" and less of a \"I recommend this person to work here\" kind of way. Maybe this is what most referals are anyways, but there you go.", 
            "title": "Referrals"
        }, 
        {
            "location": "/Applying/keeping_track_of_applications/", 
            "text": "Keeping track of applications\n\n\nThis is nerd-me's favourite part!\n\n\nI like to keep track of where I've applied to in a spreadsheet. It looks like this:\n\n\n\n\n\n\nFor each company I put:\n\n\n\n\ncompany name\n\n\nwhere they're located\n\n\ntheir size\n\n\nif they can sponsor visas (important for US companies, since I'm Canadian and can't work there if they don't sponsor J1)\n\n\nMy contact and how I got it - in case I want to reach out in the future and forget who I was talking to\n\n\nLast thing that happened (applied? talked to recruiter? had an interview?)\n\n\nDate of last contact - this is important because if it's been a week since I've heard from them and I expectd to hear back soon, I want to follow up\n\n\nNext steps - what I or they are going to be doing next\n\n\nNotes - for various other things I want to remember\n\n\n\n\nThen each row is colour coded with one of the following colours:\n\n\n\n\nplan to apply\n\n\napplied (application sent)\n\n\nchatting / interviewing\n\n\noffer\n\n\nrejected\n\n\n\n\nAnd that's how I keep track of all my applications and don't let things fall through the cracks!\n\n\nCause if there's one thing I've learned it's that recruiters are often quite okay with letting you fall through the cracks, as long as in the end they hire as many interns as they wanted to.", 
            "title": "Keeping track of applications"
        }, 
        {
            "location": "/Applying/keeping_track_of_applications/#keeping-track-of-applications", 
            "text": "This is nerd-me's favourite part!  I like to keep track of where I've applied to in a spreadsheet. It looks like this:    For each company I put:   company name  where they're located  their size  if they can sponsor visas (important for US companies, since I'm Canadian and can't work there if they don't sponsor J1)  My contact and how I got it - in case I want to reach out in the future and forget who I was talking to  Last thing that happened (applied? talked to recruiter? had an interview?)  Date of last contact - this is important because if it's been a week since I've heard from them and I expectd to hear back soon, I want to follow up  Next steps - what I or they are going to be doing next  Notes - for various other things I want to remember   Then each row is colour coded with one of the following colours:   plan to apply  applied (application sent)  chatting / interviewing  offer  rejected   And that's how I keep track of all my applications and don't let things fall through the cracks!  Cause if there's one thing I've learned it's that recruiters are often quite okay with letting you fall through the cracks, as long as in the end they hire as many interns as they wanted to.", 
            "title": "Keeping track of applications"
        }, 
        {
            "location": "/Applying/references/", 
            "text": "References\n\n\nWait for them to ask. And don't put \"references available by request\" or something similar. If they want them, they'll ask.\n\n\nHave some people in mind you could ask for references if they're needed. Ideally they'd be a previous employers in tech, but it can also be people you've volunteered for or worked for outside of tech. The most important thing is that they can vouch for you doing good work.\n\n\nOne thing I like to do is remind my references why I'm great:\n\n\n\n\nHey [name]! I'm in the middle of the interview process for [company] and was wondering if you'd be willing to act as a reference for me. I was hoping you could talk about [impressive things I did while working with you] and about how I'm [skills I have and showed them while working there]\n\n\n\n\nThen when the people I'm interviewing with call them up, they already know what to say about me!", 
            "title": "References"
        }, 
        {
            "location": "/Applying/references/#references", 
            "text": "Wait for them to ask. And don't put \"references available by request\" or something similar. If they want them, they'll ask.  Have some people in mind you could ask for references if they're needed. Ideally they'd be a previous employers in tech, but it can also be people you've volunteered for or worked for outside of tech. The most important thing is that they can vouch for you doing good work.  One thing I like to do is remind my references why I'm great:   Hey [name]! I'm in the middle of the interview process for [company] and was wondering if you'd be willing to act as a reference for me. I was hoping you could talk about [impressive things I did while working with you] and about how I'm [skills I have and showed them while working there]   Then when the people I'm interviewing with call them up, they already know what to say about me!", 
            "title": "References"
        }, 
        {
            "location": "/Applying/resumes/", 
            "text": "Resumes\n\n\nDisclaimer\n\n\nThere are a lot of opinions on resumes. Many of them conflict with each other. Here I'll write about the things I look for when critiquing/writing resumes, but keep in mind it's just my own preference (and I'll try to explain why I feel that way). The main goal of a resume is to advertise yourself as well as possible, so if you feel you can do that better by not following my advice, then go for it!\n\n\nWhy resumes are important\n\n\nThis is only the first step to applying for jobs\u200a\u2014\u200aif you have a weak resume you don\u2019t even get to the interview part (even if you're super qualified!), so having a good resume is very important. Folks that are hiring often spend only a few seconds looking at your resume, so knowing what they're expecting to see and how to impress them is essential for getting your job.\n\n\nKey goals\n\n\n\n\nGoal: prove you're qualified and would be nice to work with\n\n\nHow you'll do it:\n\n\nmake your resume easy to scan\n\n\nclearly and concisely demonstrate your qualifications\n\n\n\n\nStart early!\n\n\nStart on your resume at least a month before applying for jobs so you have time to refine it to be awesome.\n\n\nGet people to critique your resume\n\n\nThis is a verrry important step and why it's good to start early. Go to resume critique sessions if your school holds them and ask your peers or more folks to look over your resume. Post your resume on Facebook and just keep asking people to edit it. I know it\u2019s scary to expose yourself like that, but having other people look over your resume is so so useful and helpful. If you can push your comfort levels a little, I think it will be worth it.\n\n\nShow don't tell\n\n\nAs much as possible, don't list your skills without context proving you have them. Anyone can write \"good communicator\" on their resume, and unless you talk about something you did that needed very good communication skills, that line is essentially useless. In general, just don't list \"good communicator\" as a skill and instead talk about your communication skills when you talk about your experience. Similarily, show that you know programming languages by mentioning them in the work you've done with them and don't just list a bunch of them at the top of your resume.\n\n\nLength\n\n\nOne page is generally considered best, but I've had a two page resume in the past and know plenty of people that have done well with two page resumes. In general, I'd say if you have a two page resume, you should make sure it's okay if they only read the first page (i.e. the second page is like \"bonus extra stuff about me\").\n\n\nI like the idea of the one page resume because (1) people might not look at it long enough to even see the second page and (2) if you spread out your information accross two pages, you'll probably have less concentration of the good stuff. If you have a 2+ page resume, pick your best selling points accross those multiple pages and put just those on one page.\n\n\nIn general, it might seem like writing more will make you seem more impressive, but if you write tons and tons only to fill space, it won't be impressive because it will be obvious that it's just filler. Short resumes clearly and concisely demonstrate your qualifications and are easier for a recruiter or potential employer to scan and understand.\n\n\nSections in your resume\n\n\nHeader\n\n\n\n\nHere you'll want to put your name, email, and GitHub (if you have one)\n\n\nIf you have a website, link to it\n\n\nMany people put their phone number here, but I don't like being called out of the blue so I don't put my number on my resume - if they need it they can email me and ask for it\n\n\nDon't put your address - no one will mail you in this day and age, and it takes up a bunch of space\n\n\nIf you're early in your education, don't put your term/year/graduation date in the header - it gives you less cred right off the bat (you can put it in the education section lower down)\n\n\n\n\nWork experience\n\n\n\n\nThis should go at the top if you have relevant experience\n\n\nIf you have some work experience, but it's not relevant to tech, you might want to put it on your resume anyways. Put anything tech related above your work experience, and if there's still a bunch of space left, talk about the jobs you've had in the recent past and the skills you used there. There are probably things you did that have skills that translate to working a tech job - leadership, navigating new situations, problem solving, working under pressure, etc.\n\n\n\n\nEducation\n\n\n\n\nWhere this goes depends on how well known your school is and how much it'll help sell you compared to your other projects. In general, the order of sections on your resume should go from most impressive (and therefore likely to get you to the next stage) to least impressive, since whoever is reading your resume will likely scan it from top to bottom and might make a decision before they get to the bottom\n\n\nIf you're applying through a school specific application process (e.g. Waterloo's coop system) everyone has the same education which means it doesn't make your resume stand out at all - so put it near the bottom\n\n\n\n\nProjects\n\n\n\n\nIf you don't have work experience, work on some small tech projects you can highlight at the top of your resume as proof of your skills.\n\n\nSee \nthe page on side projects\n for more info\n\n\nIf you have a lot of projects, pick your favourite 3-4 for your resume; it might seem like having 7 projects looks impressive but unless they're all super impressive it just looks like filler - on your resume you always want quality over quantity\n\n\n\n\nAwards / Scholarships\n\n\n\n\nIf you have any impressive looking awards/scholarships, definitely mention them\n\n\n\n\nVolunteer experience\n\n\n\n\nThis is especially helpful if you have less work experience\n\n\nIn my first year of school, I volunteered at some CS workshops (less than a day's commitment each) and put those on my resume\n\n\n\n\nSmall section for your other interests\n\n\n\n\nI like to put that I sing in choirs and involved with certain clubs - it's important to me to have a life outside of CS-y things, and many employers appreicate this too. Some will talk about them a bit during interviews to break the ice!\n\n\n\n\nNote\n: You don't need all these sections and don't have to do them the way I advise!! Think about what skills you have that you can bring to this job, and find the things in your life that most prove you're qualified and figure out the best way to organize those things on your resume. Everyone is different, so everyone has a slightly different resume that will advertise them best.\n\n\nI'd recommend checking out other people's resumes too, as some of them have sections in their resumes that I don't personally use - these are just the sections that I like and work best for me.\n\n\nHow to talk about things\n\n\n\n\nuse action verbs - they help describe the skills you've used, and starting bullet points with them helps keep your descriptions short and powerful - Google \"action verbs\" to find a bunch of lists of words to use\n\n\nadd dates when possible - for work experience, projects, volunteering, etc.\n\n\nbullet points should be concise and easy to scan, so ideally only one line long and rarely longer than two lines\n\n\nif you have more than 4 bullet points for one section, it'll become a big block of text and will become harder to scan as well\n\n\n\n\nOn how old your points can be\n\n\nOnce you're 2 years into university, I'd say don't talk about high school at all unless (1) you have very few things to say about your last two years or (2) your high school accomplishments are extremely impressive\n\n\nFormatting\n\n\nConsistency:\n\n\n\n\nuse periods at the end of bullet points or don't, but don't mix them\n\n\nmake sure your dates are in the same format (e.g. Aug 2017 or September '17)\n\n\nin general, the way you format each section and the way you talk about things should be consistent - this makes it easy to find information and to scan your resume\n\n\nin case you're thinking this right now - yes I could have better consistency in this guide because I'm not alawys doing the things I literally just mentioned ...but it's a lot harder for a thing this big and I guess I don't care enough ^_^\n\n\n\n\nKeep it simple:\n\n\n\n\nThe more different formatting styles there are (bold, italics, different text sizes, different fonts, different colours, use of capital letters) the more work your brain does to make sense of it all. Having a few styles is helpful for differentiating headings/bullet points/important words (if you want), but keep it minimal or your resume becomes harder to scan\n\n\n\n\nMake sure you can print your resume:\n\n\n\n\nmargins should be wide enough that things aren't cut off\n\n\nif you use colour, make sure it prints clearly enough in black and white\n\n\n\n\nLink to stuff!\n\n\nI'm all about hyperlinks everywhere.\n\n\nIf you have projects on GitHub (if you don't, but have proejcts, make an account and put them on GitHub!) link to it at the top of your resume, but also link to your project in that section on your resume.\n\n\nIf you've written a blog post about a project, link to it. If you have a website, link to it at the top of your resume. Add your linkedin. Add your email. Make it all clickable! If you worked at a company that has a website, link to that too.\n\n\nIf you really want someone to be able to visit your link, even if they've printed your resume, make a short link (so it's easier to copy out) and explictly paste it in your resume. In other places you can just hyperlink text as bonus information if someone happens to hover over that area.\n\n\nMore resources about resumes:\n\n\n\n\nsomething I wrote a while ago about resumes\n (there's some stuff I haven't put here yet)\n\n\nmy resume if you're curious what it looks like", 
            "title": "Resumes"
        }, 
        {
            "location": "/Applying/resumes/#resumes", 
            "text": "", 
            "title": "Resumes"
        }, 
        {
            "location": "/Applying/resumes/#disclaimer", 
            "text": "There are a lot of opinions on resumes. Many of them conflict with each other. Here I'll write about the things I look for when critiquing/writing resumes, but keep in mind it's just my own preference (and I'll try to explain why I feel that way). The main goal of a resume is to advertise yourself as well as possible, so if you feel you can do that better by not following my advice, then go for it!", 
            "title": "Disclaimer"
        }, 
        {
            "location": "/Applying/resumes/#why-resumes-are-important", 
            "text": "This is only the first step to applying for jobs\u200a\u2014\u200aif you have a weak resume you don\u2019t even get to the interview part (even if you're super qualified!), so having a good resume is very important. Folks that are hiring often spend only a few seconds looking at your resume, so knowing what they're expecting to see and how to impress them is essential for getting your job.", 
            "title": "Why resumes are important"
        }, 
        {
            "location": "/Applying/resumes/#key-goals", 
            "text": "Goal: prove you're qualified and would be nice to work with  How you'll do it:  make your resume easy to scan  clearly and concisely demonstrate your qualifications", 
            "title": "Key goals"
        }, 
        {
            "location": "/Applying/resumes/#start-early", 
            "text": "Start on your resume at least a month before applying for jobs so you have time to refine it to be awesome.", 
            "title": "Start early!"
        }, 
        {
            "location": "/Applying/resumes/#get-people-to-critique-your-resume", 
            "text": "This is a verrry important step and why it's good to start early. Go to resume critique sessions if your school holds them and ask your peers or more folks to look over your resume. Post your resume on Facebook and just keep asking people to edit it. I know it\u2019s scary to expose yourself like that, but having other people look over your resume is so so useful and helpful. If you can push your comfort levels a little, I think it will be worth it.", 
            "title": "Get people to critique your resume"
        }, 
        {
            "location": "/Applying/resumes/#show-dont-tell", 
            "text": "As much as possible, don't list your skills without context proving you have them. Anyone can write \"good communicator\" on their resume, and unless you talk about something you did that needed very good communication skills, that line is essentially useless. In general, just don't list \"good communicator\" as a skill and instead talk about your communication skills when you talk about your experience. Similarily, show that you know programming languages by mentioning them in the work you've done with them and don't just list a bunch of them at the top of your resume.", 
            "title": "Show don't tell"
        }, 
        {
            "location": "/Applying/resumes/#length", 
            "text": "One page is generally considered best, but I've had a two page resume in the past and know plenty of people that have done well with two page resumes. In general, I'd say if you have a two page resume, you should make sure it's okay if they only read the first page (i.e. the second page is like \"bonus extra stuff about me\").  I like the idea of the one page resume because (1) people might not look at it long enough to even see the second page and (2) if you spread out your information accross two pages, you'll probably have less concentration of the good stuff. If you have a 2+ page resume, pick your best selling points accross those multiple pages and put just those on one page.  In general, it might seem like writing more will make you seem more impressive, but if you write tons and tons only to fill space, it won't be impressive because it will be obvious that it's just filler. Short resumes clearly and concisely demonstrate your qualifications and are easier for a recruiter or potential employer to scan and understand.", 
            "title": "Length"
        }, 
        {
            "location": "/Applying/resumes/#sections-in-your-resume", 
            "text": "Header   Here you'll want to put your name, email, and GitHub (if you have one)  If you have a website, link to it  Many people put their phone number here, but I don't like being called out of the blue so I don't put my number on my resume - if they need it they can email me and ask for it  Don't put your address - no one will mail you in this day and age, and it takes up a bunch of space  If you're early in your education, don't put your term/year/graduation date in the header - it gives you less cred right off the bat (you can put it in the education section lower down)   Work experience   This should go at the top if you have relevant experience  If you have some work experience, but it's not relevant to tech, you might want to put it on your resume anyways. Put anything tech related above your work experience, and if there's still a bunch of space left, talk about the jobs you've had in the recent past and the skills you used there. There are probably things you did that have skills that translate to working a tech job - leadership, navigating new situations, problem solving, working under pressure, etc.   Education   Where this goes depends on how well known your school is and how much it'll help sell you compared to your other projects. In general, the order of sections on your resume should go from most impressive (and therefore likely to get you to the next stage) to least impressive, since whoever is reading your resume will likely scan it from top to bottom and might make a decision before they get to the bottom  If you're applying through a school specific application process (e.g. Waterloo's coop system) everyone has the same education which means it doesn't make your resume stand out at all - so put it near the bottom   Projects   If you don't have work experience, work on some small tech projects you can highlight at the top of your resume as proof of your skills.  See  the page on side projects  for more info  If you have a lot of projects, pick your favourite 3-4 for your resume; it might seem like having 7 projects looks impressive but unless they're all super impressive it just looks like filler - on your resume you always want quality over quantity   Awards / Scholarships   If you have any impressive looking awards/scholarships, definitely mention them   Volunteer experience   This is especially helpful if you have less work experience  In my first year of school, I volunteered at some CS workshops (less than a day's commitment each) and put those on my resume   Small section for your other interests   I like to put that I sing in choirs and involved with certain clubs - it's important to me to have a life outside of CS-y things, and many employers appreicate this too. Some will talk about them a bit during interviews to break the ice!   Note : You don't need all these sections and don't have to do them the way I advise!! Think about what skills you have that you can bring to this job, and find the things in your life that most prove you're qualified and figure out the best way to organize those things on your resume. Everyone is different, so everyone has a slightly different resume that will advertise them best.  I'd recommend checking out other people's resumes too, as some of them have sections in their resumes that I don't personally use - these are just the sections that I like and work best for me.", 
            "title": "Sections in your resume"
        }, 
        {
            "location": "/Applying/resumes/#how-to-talk-about-things", 
            "text": "use action verbs - they help describe the skills you've used, and starting bullet points with them helps keep your descriptions short and powerful - Google \"action verbs\" to find a bunch of lists of words to use  add dates when possible - for work experience, projects, volunteering, etc.  bullet points should be concise and easy to scan, so ideally only one line long and rarely longer than two lines  if you have more than 4 bullet points for one section, it'll become a big block of text and will become harder to scan as well", 
            "title": "How to talk about things"
        }, 
        {
            "location": "/Applying/resumes/#on-how-old-your-points-can-be", 
            "text": "Once you're 2 years into university, I'd say don't talk about high school at all unless (1) you have very few things to say about your last two years or (2) your high school accomplishments are extremely impressive", 
            "title": "On how old your points can be"
        }, 
        {
            "location": "/Applying/resumes/#formatting", 
            "text": "Consistency:   use periods at the end of bullet points or don't, but don't mix them  make sure your dates are in the same format (e.g. Aug 2017 or September '17)  in general, the way you format each section and the way you talk about things should be consistent - this makes it easy to find information and to scan your resume  in case you're thinking this right now - yes I could have better consistency in this guide because I'm not alawys doing the things I literally just mentioned ...but it's a lot harder for a thing this big and I guess I don't care enough ^_^   Keep it simple:   The more different formatting styles there are (bold, italics, different text sizes, different fonts, different colours, use of capital letters) the more work your brain does to make sense of it all. Having a few styles is helpful for differentiating headings/bullet points/important words (if you want), but keep it minimal or your resume becomes harder to scan   Make sure you can print your resume:   margins should be wide enough that things aren't cut off  if you use colour, make sure it prints clearly enough in black and white", 
            "title": "Formatting"
        }, 
        {
            "location": "/Applying/resumes/#link-to-stuff", 
            "text": "I'm all about hyperlinks everywhere.  If you have projects on GitHub (if you don't, but have proejcts, make an account and put them on GitHub!) link to it at the top of your resume, but also link to your project in that section on your resume.  If you've written a blog post about a project, link to it. If you have a website, link to it at the top of your resume. Add your linkedin. Add your email. Make it all clickable! If you worked at a company that has a website, link to that too.  If you really want someone to be able to visit your link, even if they've printed your resume, make a short link (so it's easier to copy out) and explictly paste it in your resume. In other places you can just hyperlink text as bonus information if someone happens to hover over that area.  More resources about resumes:   something I wrote a while ago about resumes  (there's some stuff I haven't put here yet)  my resume if you're curious what it looks like", 
            "title": "Link to stuff!"
        }, 
        {
            "location": "/Applying/side_projects/", 
            "text": "Side projects\n\n\n\n\nIf you don't have work experience, work on some small tech projects you can highlight at the top of your resume as proof of your skills\n\n\nThese don't have to be big or take too long to do! It's totally okay to make something assignment sized that takes less than a week of work, or a few hours on a weekend.\n\n\nIf you don't feel like you have the skills to make something yet, or don't have any ideas, you can take a short online course that involves a project!\n\n\nProjects are important when you don't have work experience yet, but they're not as essential once you have work experience on your resume\n\n\nPLEASE PLEASE please don't spend all your time on coding projects unless that's just how you like to spend your time\n you don't have to do side projects to be successful even though it often is talked about as if you do\n\n\n\n\nYou don\u2019t have to build something super fancy complicated. You can create something through a course (like this \nUdacity web development course\n) or make a game like hangman or build a calculator or whatever else you can think of. You\u2019ll be surprised how complicated \u201csimple projects\u201d can be and how much you can learn. That\u2019s what employers want to see.", 
            "title": "Side projects"
        }, 
        {
            "location": "/Applying/side_projects/#side-projects", 
            "text": "If you don't have work experience, work on some small tech projects you can highlight at the top of your resume as proof of your skills  These don't have to be big or take too long to do! It's totally okay to make something assignment sized that takes less than a week of work, or a few hours on a weekend.  If you don't feel like you have the skills to make something yet, or don't have any ideas, you can take a short online course that involves a project!  Projects are important when you don't have work experience yet, but they're not as essential once you have work experience on your resume  PLEASE PLEASE please don't spend all your time on coding projects unless that's just how you like to spend your time  you don't have to do side projects to be successful even though it often is talked about as if you do   You don\u2019t have to build something super fancy complicated. You can create something through a course (like this  Udacity web development course ) or make a game like hangman or build a calculator or whatever else you can think of. You\u2019ll be surprised how complicated \u201csimple projects\u201d can be and how much you can learn. That\u2019s what employers want to see.", 
            "title": "Side projects"
        }, 
        {
            "location": "/Applying/when_to_apply/", 
            "text": "When to apply\n\n\nIf you're applying for summer internship and want to go to a big or well known company, often you'll need to apply September/October-ish the year before. Yes, this is early. Yes, this is too early. Yes, it's ridiculous. Pretty much, companies figure that if they extend you an offer before everyone else, you'll be more likely to work there. But then everywhere has been doing this and then if you wait until January the intern class will be full.\n\n\nHowever, there are also a lot of companies that will keep hiring in the new year, and some that only start hiring in the new year.\n\n\nSmaller companies like startups (check out \nAngelList\n) might only be able to know for sure if they can afford an intern when it's a month or two before the internship would start, so don't worry if it's getting late - there are always jobs. We're lucky to be in tech because of how many job opportunities there are!\n\n\nIf you're applying for internships in the fall or winter, 4 months before is probably plenty of time. If you're a Waterloo student and have an internship for 4 months then school for 4 months, and then another internship - I'd recommend applying during the internship and not during school. Interviews during midterms are just too much. It's an amazing feeling to already have a job while watching all your peers stress out about job apps ;D", 
            "title": "When to apply"
        }, 
        {
            "location": "/Applying/when_to_apply/#when-to-apply", 
            "text": "If you're applying for summer internship and want to go to a big or well known company, often you'll need to apply September/October-ish the year before. Yes, this is early. Yes, this is too early. Yes, it's ridiculous. Pretty much, companies figure that if they extend you an offer before everyone else, you'll be more likely to work there. But then everywhere has been doing this and then if you wait until January the intern class will be full.  However, there are also a lot of companies that will keep hiring in the new year, and some that only start hiring in the new year.  Smaller companies like startups (check out  AngelList ) might only be able to know for sure if they can afford an intern when it's a month or two before the internship would start, so don't worry if it's getting late - there are always jobs. We're lucky to be in tech because of how many job opportunities there are!  If you're applying for internships in the fall or winter, 4 months before is probably plenty of time. If you're a Waterloo student and have an internship for 4 months then school for 4 months, and then another internship - I'd recommend applying during the internship and not during school. Interviews during midterms are just too much. It's an amazing feeling to already have a job while watching all your peers stress out about job apps ;D", 
            "title": "When to apply"
        }, 
        {
            "location": "/At-the-Internship/1_on_1s_and_feedback/", 
            "text": "1:1s and feedback\n\n\nWhat is a 1:1?\n\n\n\"It\u2019s fairly simple: just take 1 hour every two weeks for each team member and have an informal conversation about engagement, workload, team dynamics, performance and learning and development.\"\n\n\nThere's lots of articles about 1:1s - I got that description just by Googling it and finding \nthis article\n\n\nI won't talk that much about what 1:1s are or what you can do with them, since there are so many articles out there, but I want to talk a bit about how I've learned to use them productively to help me get feedback and grow as a person/engineer\n\n\nHave 1:1s\n\n\nI guess before assuming you're gonna have 1:1s with your supervisor/mentor I should realize that not everyone will have this setup. But I'd really strongly recommend it - it's very common accross tech and has been very important for my own growth and for my contributions to the companies I've worked at. If you don't have 1:1s at your company, consider convincing them to have them.\n\n\nHow to get good feedback/advice in your 1:1s\n\n\nAsk for feedback. At every 1:1 say \"Tell me what I can be doing better. Tell me what I'm already doing well so I can keep doing it.\" It can be really hard for supervisors/mentors/etc to think of these things, so push them. Say \"I want to be better. \nHelp me\n be a better person. If you can't give me feedback or advice, it'll hurt my career and my performance during this internship\"\n\n\nAsk teammates to meet with you too sometimes, if you work with them regularly. Sometimes you don't work much with your supervisor and they won't be able to give as good feedback, so ask the people you \ndo\n work with for feedback.\n\n\nMeet regularly enough to get feedback from them. (I like weekly 1:1s)\n\n\nAnd push. I can't stress this enough. It might feel weird for them but do your best to figure out what you need to improve and then work at it.\n\n\nAt school, things you could improve are things like learning material better, studying harder, or whatever. But now you're learning people skills and technical skills\nwhich are \nWAY\n more interesting and useful. So take this opportunity you get to meet with people and ask for feedback, and try to learn as much as you can.\n\n\n(Watch your health though - some interns try to do a lot and learn a lot and then burn out, so be careful)\n\n\nOne thing that's helped me in getting feedback and keeping track of progress is keeping a \nsummary of all I've done over my intership", 
            "title": "1 on 1s and feedback"
        }, 
        {
            "location": "/At-the-Internship/1_on_1s_and_feedback/#11s-and-feedback", 
            "text": "", 
            "title": "1:1s and feedback"
        }, 
        {
            "location": "/At-the-Internship/1_on_1s_and_feedback/#what-is-a-11", 
            "text": "\"It\u2019s fairly simple: just take 1 hour every two weeks for each team member and have an informal conversation about engagement, workload, team dynamics, performance and learning and development.\"  There's lots of articles about 1:1s - I got that description just by Googling it and finding  this article  I won't talk that much about what 1:1s are or what you can do with them, since there are so many articles out there, but I want to talk a bit about how I've learned to use them productively to help me get feedback and grow as a person/engineer", 
            "title": "What is a 1:1?"
        }, 
        {
            "location": "/At-the-Internship/1_on_1s_and_feedback/#have-11s", 
            "text": "I guess before assuming you're gonna have 1:1s with your supervisor/mentor I should realize that not everyone will have this setup. But I'd really strongly recommend it - it's very common accross tech and has been very important for my own growth and for my contributions to the companies I've worked at. If you don't have 1:1s at your company, consider convincing them to have them.", 
            "title": "Have 1:1s"
        }, 
        {
            "location": "/At-the-Internship/1_on_1s_and_feedback/#how-to-get-good-feedbackadvice-in-your-11s", 
            "text": "Ask for feedback. At every 1:1 say \"Tell me what I can be doing better. Tell me what I'm already doing well so I can keep doing it.\" It can be really hard for supervisors/mentors/etc to think of these things, so push them. Say \"I want to be better.  Help me  be a better person. If you can't give me feedback or advice, it'll hurt my career and my performance during this internship\"  Ask teammates to meet with you too sometimes, if you work with them regularly. Sometimes you don't work much with your supervisor and they won't be able to give as good feedback, so ask the people you  do  work with for feedback.  Meet regularly enough to get feedback from them. (I like weekly 1:1s)  And push. I can't stress this enough. It might feel weird for them but do your best to figure out what you need to improve and then work at it.  At school, things you could improve are things like learning material better, studying harder, or whatever. But now you're learning people skills and technical skills\nwhich are  WAY  more interesting and useful. So take this opportunity you get to meet with people and ask for feedback, and try to learn as much as you can.  (Watch your health though - some interns try to do a lot and learn a lot and then burn out, so be careful)  One thing that's helped me in getting feedback and keeping track of progress is keeping a  summary of all I've done over my intership", 
            "title": "How to get good feedback/advice in your 1:1s"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/", 
            "text": "Asking questions\n\n\nAh, one of the most scary parts of the internship but also probably the most important!\n\n\nAsk lots of questions! Ask questions! Did I mention yet that you should ask people questions?\n\n\nEspecially at first, since you probably don't know how most things work yet\n\n\nWho do you ask?\n\n\nusually you'd ask your supervisor\nbut sometimes to the #engineering slack channel or whatever\nwhoever would know the answer\nif you have 1:1s with your supervisor (and if you dont' I'd suggest to try to set them up) you can also ask every week if your questions are too much or not enough and if they're good questions and get advice on that\n\n\nHow many questions is too much?\n\n\nThis is a trick question. I don't think there's such thing as too many questions. It's more about:\n\n\n\n\nAre you asking questions too often?\n Some people are happy being asked things all the time, others would rather you acquire a short list and then ask them all at once and only a few times a day (that way they can focus on their own work as well as helping you out)\n\n\nAre you re-asking questions?\n If you asked something before and didn't take note of the answer and are asking again, that's annoying for the people you're asking. Try to keep track of what people are teaching you (write stuff down!) Of course sometimes things will slip your mind, but if you find yourself re-asking a question make sure to write down the answer that time at least\n\n\nCould you have just Googled it?\n Classic problem. Remember, when you ask people questions you're using their time. And they're usually happy to help you if you need the help. But if you could have found the answer easily by Google searching the error message or term you're trying to define or whatever, then you really shouldn't ask. Always look around a bit first. Some questions you can't find answers to on Google but you can find by searching company forums or documentation, so try that too if you know where those are (and if you don't... ask!)\n\n\nCould you have used standard debugging/code searching tricks to figure it out?\n If you don't know these yet, then ask someone to help you. But notice what stategies they use to figure it out. Next time you have a problem, those same strategies might help.\n\n\nHow long will it take for them to answer your question?\n This is often unknown. But try to think of how much questions will bother other ppl vs benefit you. Some quick questions are a small amount of time on their part and a huge benefit to your comfort and ability.\n\n\n\n\nAt what point of trying to find the answer should you ask?\n\n\n\n\nI remember an intern telling me once that he'd been stuck on something for a week now and barely made progress, but he didn't want to ask for help. That's ridiculous to me.\n\n\nIf you have no idea how to find the answer (and you've tried to figure it out for a little bit) you should ask. At some point, you're just sitting around and not doing anything at all and that doesn't help anyone\n\n\nIf the problem is stopping you from moving forward and you have no idea what to do next (this is a terrifying thing for me still) - ASK SOMEONE\n\n\nYou should come up with a standard with your supervisor/mentor - often I've been told that if I've been stuck and making no progress for 20-30 minutes, then I should ask for help\n\n\nOne helpful tip I've been given is to write down all the things I tried in those 20-30 minutes, so that when I ask someone for help they both (1) know what I've tried and learned about the problem, so they don't retry those things or refigure out anything (2) know that I've actually given the problem a solid attempt\n\n\nRemember, the faster you learn what's up and how to do stuff, the more good work you'll do\n\n\n\n\nHow to learn from the questions you ask\n\n\nIf you ask good questions and learn from them, you can eventually ask less (or at least, more experienced) questions.\n\n\nWhen you don't know how to figure something out and have to ask someone, also ask how they would have found the answer if they were you - maybe you'll learn about some good company resource for answering questions, or learn how to Google something more effectively.\n\n\nGood things to ask questions about\n\n\nYou're trying to learn two main things (and they overlap):\n\n\n\n\n\n\nhow the code works and all the software\n\n\n\n\nwhat tools/technologies are used?\n\n\nwhat are the style guidelines? are there standards for how to write pretty code?\n\n\nhow much testing should you add and how is that done?\n\n\nhow fast should you be finishing things? how much of a perfectionist (at the cost of time) should you be?\n\n\nhow does code get from being written to being live in the product?\n\n\nhow are bugs reported?\n\n\n\n\n\n\n\n\nhow people work\n\n\n\n\nwhat things do they talk about? what are their social norms?\n\n\ndo they talk in person? or over slack?\n\n\ndo they like it quiet? do they like to be undisturbed and only talk at lunch?\n\n\n\n\n\n\n\n\nNote that interns often get a lot of love for how they question things and bring in new energy, so don't be afraid to be you and be something different from what everyone else does. ...but there's some balance in that you want people to like you and enjoy working with you. So you want to fit into their social norms but also challenge them \nshrug\n :p", 
            "title": "Asking questions"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/#asking-questions", 
            "text": "Ah, one of the most scary parts of the internship but also probably the most important!  Ask lots of questions! Ask questions! Did I mention yet that you should ask people questions?  Especially at first, since you probably don't know how most things work yet", 
            "title": "Asking questions"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/#who-do-you-ask", 
            "text": "usually you'd ask your supervisor\nbut sometimes to the #engineering slack channel or whatever\nwhoever would know the answer\nif you have 1:1s with your supervisor (and if you dont' I'd suggest to try to set them up) you can also ask every week if your questions are too much or not enough and if they're good questions and get advice on that", 
            "title": "Who do you ask?"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/#how-many-questions-is-too-much", 
            "text": "This is a trick question. I don't think there's such thing as too many questions. It's more about:   Are you asking questions too often?  Some people are happy being asked things all the time, others would rather you acquire a short list and then ask them all at once and only a few times a day (that way they can focus on their own work as well as helping you out)  Are you re-asking questions?  If you asked something before and didn't take note of the answer and are asking again, that's annoying for the people you're asking. Try to keep track of what people are teaching you (write stuff down!) Of course sometimes things will slip your mind, but if you find yourself re-asking a question make sure to write down the answer that time at least  Could you have just Googled it?  Classic problem. Remember, when you ask people questions you're using their time. And they're usually happy to help you if you need the help. But if you could have found the answer easily by Google searching the error message or term you're trying to define or whatever, then you really shouldn't ask. Always look around a bit first. Some questions you can't find answers to on Google but you can find by searching company forums or documentation, so try that too if you know where those are (and if you don't... ask!)  Could you have used standard debugging/code searching tricks to figure it out?  If you don't know these yet, then ask someone to help you. But notice what stategies they use to figure it out. Next time you have a problem, those same strategies might help.  How long will it take for them to answer your question?  This is often unknown. But try to think of how much questions will bother other ppl vs benefit you. Some quick questions are a small amount of time on their part and a huge benefit to your comfort and ability.", 
            "title": "How many questions is too much?"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/#at-what-point-of-trying-to-find-the-answer-should-you-ask", 
            "text": "I remember an intern telling me once that he'd been stuck on something for a week now and barely made progress, but he didn't want to ask for help. That's ridiculous to me.  If you have no idea how to find the answer (and you've tried to figure it out for a little bit) you should ask. At some point, you're just sitting around and not doing anything at all and that doesn't help anyone  If the problem is stopping you from moving forward and you have no idea what to do next (this is a terrifying thing for me still) - ASK SOMEONE  You should come up with a standard with your supervisor/mentor - often I've been told that if I've been stuck and making no progress for 20-30 minutes, then I should ask for help  One helpful tip I've been given is to write down all the things I tried in those 20-30 minutes, so that when I ask someone for help they both (1) know what I've tried and learned about the problem, so they don't retry those things or refigure out anything (2) know that I've actually given the problem a solid attempt  Remember, the faster you learn what's up and how to do stuff, the more good work you'll do", 
            "title": "At what point of trying to find the answer should you ask?"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/#how-to-learn-from-the-questions-you-ask", 
            "text": "If you ask good questions and learn from them, you can eventually ask less (or at least, more experienced) questions.  When you don't know how to figure something out and have to ask someone, also ask how they would have found the answer if they were you - maybe you'll learn about some good company resource for answering questions, or learn how to Google something more effectively.", 
            "title": "How to learn from the questions you ask"
        }, 
        {
            "location": "/At-the-Internship/asking_questions/#good-things-to-ask-questions-about", 
            "text": "You're trying to learn two main things (and they overlap):    how the code works and all the software   what tools/technologies are used?  what are the style guidelines? are there standards for how to write pretty code?  how much testing should you add and how is that done?  how fast should you be finishing things? how much of a perfectionist (at the cost of time) should you be?  how does code get from being written to being live in the product?  how are bugs reported?     how people work   what things do they talk about? what are their social norms?  do they talk in person? or over slack?  do they like it quiet? do they like to be undisturbed and only talk at lunch?     Note that interns often get a lot of love for how they question things and bring in new energy, so don't be afraid to be you and be something different from what everyone else does. ...but there's some balance in that you want people to like you and enjoy working with you. So you want to fit into their social norms but also challenge them  shrug  :p", 
            "title": "Good things to ask questions about"
        }, 
        {
            "location": "/At-the-Internship/coworker_relationships/", 
            "text": "Coworker Relationships\n\n\n\n\nOne thing no one tells you early in your career is how insanely valuable your coworker relationships become \nafter\n you leave a company.\n\n\nThey know your strengths \n can call your bullshit. And once you're no longer coworkers, work-related complications/considerations disappear.\n\n\nFriends you haven't worked with are great for encouragement, but when it comes to your career, no one knows you like former coworkers (duh).\n\n\n\n\nSource: https://twitter.com/ashleymayer/status/859914112741982208", 
            "title": "Coworker relationships"
        }, 
        {
            "location": "/At-the-Internship/coworker_relationships/#coworker-relationships", 
            "text": "One thing no one tells you early in your career is how insanely valuable your coworker relationships become  after  you leave a company.  They know your strengths   can call your bullshit. And once you're no longer coworkers, work-related complications/considerations disappear.  Friends you haven't worked with are great for encouragement, but when it comes to your career, no one knows you like former coworkers (duh).   Source: https://twitter.com/ashleymayer/status/859914112741982208", 
            "title": "Coworker Relationships"
        }, 
        {
            "location": "/At-the-Internship/keeping_an_internship_summary/", 
            "text": "Keeping an internship summary doc\n\n\nI always keep a log of my internship. Each week I write out:\n\n\n\n\nthings I did that week (all the code changes)\n\n\nnontechnical things I contributed or did (maybe an event I went to or a conversation I had or something)\n\n\nreflections on what I think I did well or could work on and just how I felt about the week (i.e. I felt anxious about x thing I want to work on getting better at y thing)\n\n\ngoals for next week or the rest of the internship in general\n\n\n\n\nAnd then I bring all those things to my \n1:1\n and talk about them and write out a summary of things we talked about in another section of the summary, as well as adding any extra goals that came out of the conversation\n\n\nIt's really nice to see what I've gotten done, and be like \"yes I did do things!\"\n\n\nAnd it's also nice to keep track of all the things I want to work on. Having them written down makes it easier to go back later and ask my mentor how I'm doing.\n\n\nHere are some excerpts from one of my internships, to give you an idea:\n\n\n\n\n\n\nReflections:\n\n\n\n\nFeeling tired and restless makes it hard to get stuff done\n\n\nOnly working on [my main project] makes it feel like I\u2019m not getting as much done - thinking about how variety of things making the number of things feel like more (in time and in stuff accomplished)\n\n\nNervous about people understanding the big codebase I'm writing\n\n\n[my project] forward - how much to prioritize [some functionality] vs [a thing that would be good before shipping] vs code clarity\n\n\n\n\n\n\n\n\n\n\nThings I did this week:\n\n\n\n\nMath solver\n\n\nAdded basic division support\n\n\nChanged the way polynomial multiplication worked\n\n\nA fair bit of cleaning things\n\n\nMath card\n\n\nIt\u2019s blue now\n\n\nHas graphs for some things\n\n\nHas roots for some things\n\n\nOther\n\n\nHelped with the study daddy spam prevention\n\n\nMade a #diversity slack channel\n\n\nChatted with [some employees] about feedback culture at the company\n\n\n\n\n\n\n\n\n\n\n1:1 takeaways:\n\n\n\n\nWrapping little functionality in functions is helpful for refactoring\n\n\nMore tests! :)\n\n\nPut some time on calendar for research and testing daily\n\n\nThink about different people and how they think and work and how you can most effectively work with them and convince them of your goals\n\n\nNew systems don't always implement easily. People have to be really behind it and get in the habit. It's hard to create change but that doesn't mean we shouldn't talk about it.\n\n\nPeople have must-have goals, and nice-to-have goals. Think about this when trying to encourage people to do certain things", 
            "title": "Keeping an internship summary"
        }, 
        {
            "location": "/At-the-Internship/keeping_an_internship_summary/#keeping-an-internship-summary-doc", 
            "text": "I always keep a log of my internship. Each week I write out:   things I did that week (all the code changes)  nontechnical things I contributed or did (maybe an event I went to or a conversation I had or something)  reflections on what I think I did well or could work on and just how I felt about the week (i.e. I felt anxious about x thing I want to work on getting better at y thing)  goals for next week or the rest of the internship in general   And then I bring all those things to my  1:1  and talk about them and write out a summary of things we talked about in another section of the summary, as well as adding any extra goals that came out of the conversation  It's really nice to see what I've gotten done, and be like \"yes I did do things!\"  And it's also nice to keep track of all the things I want to work on. Having them written down makes it easier to go back later and ask my mentor how I'm doing.  Here are some excerpts from one of my internships, to give you an idea:    Reflections:   Feeling tired and restless makes it hard to get stuff done  Only working on [my main project] makes it feel like I\u2019m not getting as much done - thinking about how variety of things making the number of things feel like more (in time and in stuff accomplished)  Nervous about people understanding the big codebase I'm writing  [my project] forward - how much to prioritize [some functionality] vs [a thing that would be good before shipping] vs code clarity      Things I did this week:   Math solver  Added basic division support  Changed the way polynomial multiplication worked  A fair bit of cleaning things  Math card  It\u2019s blue now  Has graphs for some things  Has roots for some things  Other  Helped with the study daddy spam prevention  Made a #diversity slack channel  Chatted with [some employees] about feedback culture at the company      1:1 takeaways:   Wrapping little functionality in functions is helpful for refactoring  More tests! :)  Put some time on calendar for research and testing daily  Think about different people and how they think and work and how you can most effectively work with them and convince them of your goals  New systems don't always implement easily. People have to be really behind it and get in the habit. It's hard to create change but that doesn't mean we shouldn't talk about it.  People have must-have goals, and nice-to-have goals. Think about this when trying to encourage people to do certain things", 
            "title": "Keeping an internship summary doc"
        }, 
        {
            "location": "/At-the-Internship/meetings/", 
            "text": "Meetings\n\n\n\n\nQuestion: in terms of meetings\nhow do you usually find those go?\ndo companys like it when interns talk in those? (bc I feel like there's that difference between actively listening and being curious, but also they kinda just want to present their info and be done)\n\n\n\n\nAnswer:\n\n\nDefinitely depends. If it's meant to be quick and short, you should write down questions and ask people afterwards and they can respond when they have time (or in person if they're free you can approach and ask)\nif they ask you what you think, go for it.\n\n\nIf other people are discussing something for a while and you have an opinion definitely go for it too. Just get a sense of how much other people are talking and match that. If it's a long conversation definitely ask questions otherwise it's like a huge waste of your time (in my opinion at least)\n\n\nYou could also ask going into a meeting what your role is - if they invited you so you could listen, or if they want you to be adding to the discussion.\n\n\nYou'll probably have weekly or daily meetings where you say what you're working on that day/week and you'll definitely talk in those.", 
            "title": "Meetings"
        }, 
        {
            "location": "/At-the-Internship/meetings/#meetings", 
            "text": "Question: in terms of meetings\nhow do you usually find those go?\ndo companys like it when interns talk in those? (bc I feel like there's that difference between actively listening and being curious, but also they kinda just want to present their info and be done)   Answer:  Definitely depends. If it's meant to be quick and short, you should write down questions and ask people afterwards and they can respond when they have time (or in person if they're free you can approach and ask)\nif they ask you what you think, go for it.  If other people are discussing something for a while and you have an opinion definitely go for it too. Just get a sense of how much other people are talking and match that. If it's a long conversation definitely ask questions otherwise it's like a huge waste of your time (in my opinion at least)  You could also ask going into a meeting what your role is - if they invited you so you could listen, or if they want you to be adding to the discussion.  You'll probably have weekly or daily meetings where you say what you're working on that day/week and you'll definitely talk in those.", 
            "title": "Meetings"
        }, 
        {
            "location": "/Interviews/answering_technical_questions/", 
            "text": "Answering technical questions\n\n\nAlgorithms questions\n\n\n\n\nspeak loudly, clearly, and confident\n\n\nmake eye contact if you're doing an in person interview\n\n\nget started right away (on something) - don\u2019t think to yourself, or go back and forth on things\n\n\nask questions!!\n\n\nclarify the problem to make sure you know what you're being asked (explain it back)\n\n\nclarify assumptions (ask about edge cases, or clarifying details)\n\n\nask for requirements/details (e.g. shuffle a deck of cards - do I know how many cards? what does shuffling mean in this case?)\n\n\ngo over 1-2 small test cases to make sure you know how the algorithm will work\n\n\nexplain your thoughts\n\n\njust keep talking, even if you're not sure if you're right. they want to know how you struggle just as much as (if not more than) they want to see you just \"get it\"\n\n\nbefore you start coding, explain approach/flow in mind and ask if you\u2019re on the right track/same page\n\n\nwrite stuff down as you think so they can see you can organize your thoughts\n\n\nget a good idea of the design of how it\u2019s going to work before you code it, especially if the coding will be easy but coming up with the right code will be hard (which is an ideal question)\n\n\nkeep a good pace (keep in mind how long you have and how much you're aiming to get done ... but not too much cause it can be sort of terrifying)\n\n\nit\u2019s okay to start with brute force! just get started, you can optimize things later - better to get a simple solution than no solution\n\n\nit\u2019s definitely not about getting the right answer right away - any good coder will eventually write code to do it - it\u2019s about getting there within time restraints and the process that got you there\n\n\nonce you get a draft going, ask if any further optimizations are necessary\n\n\nare you optimizing for time? space? which is more important?\n\n\nwrite/talk through some test cases if you have time, to prove to yourself and the interviewer that your code works\n\n\nconsider \nedge cases\n!\n\n\n\n\nQuestions about your experience/projects\n\n\n\n\nbe excited about what you did!\n\n\ntalk about technical aspects and explain the things \nyou\n did and what you learned\n\n\n\n\nWhiteboard tips\n\n\n\n\nI hate this, but sometimes you have to write code on the whiteboard. If this comes up, I recommend you...\n\n\nstart as high up as you can, to give yourself room\n\n\nleave some space between function calls and the \"first line\" because there's a good chance you're going to want to go back to initialize some variables there\n\n\nin general, leave some space between lines just in case\n\n\nuse helper functions as much as possible so you can write different parts of the algorithm in different parts of the board and keep track of what parts do what\n\n\nPRACTICE THIS is you know you're going to have to do it - it's really weird and different from writing code on your laptop", 
            "title": "Answering technical questions"
        }, 
        {
            "location": "/Interviews/answering_technical_questions/#answering-technical-questions", 
            "text": "Algorithms questions   speak loudly, clearly, and confident  make eye contact if you're doing an in person interview  get started right away (on something) - don\u2019t think to yourself, or go back and forth on things  ask questions!!  clarify the problem to make sure you know what you're being asked (explain it back)  clarify assumptions (ask about edge cases, or clarifying details)  ask for requirements/details (e.g. shuffle a deck of cards - do I know how many cards? what does shuffling mean in this case?)  go over 1-2 small test cases to make sure you know how the algorithm will work  explain your thoughts  just keep talking, even if you're not sure if you're right. they want to know how you struggle just as much as (if not more than) they want to see you just \"get it\"  before you start coding, explain approach/flow in mind and ask if you\u2019re on the right track/same page  write stuff down as you think so they can see you can organize your thoughts  get a good idea of the design of how it\u2019s going to work before you code it, especially if the coding will be easy but coming up with the right code will be hard (which is an ideal question)  keep a good pace (keep in mind how long you have and how much you're aiming to get done ... but not too much cause it can be sort of terrifying)  it\u2019s okay to start with brute force! just get started, you can optimize things later - better to get a simple solution than no solution  it\u2019s definitely not about getting the right answer right away - any good coder will eventually write code to do it - it\u2019s about getting there within time restraints and the process that got you there  once you get a draft going, ask if any further optimizations are necessary  are you optimizing for time? space? which is more important?  write/talk through some test cases if you have time, to prove to yourself and the interviewer that your code works  consider  edge cases !   Questions about your experience/projects   be excited about what you did!  talk about technical aspects and explain the things  you  did and what you learned   Whiteboard tips   I hate this, but sometimes you have to write code on the whiteboard. If this comes up, I recommend you...  start as high up as you can, to give yourself room  leave some space between function calls and the \"first line\" because there's a good chance you're going to want to go back to initialize some variables there  in general, leave some space between lines just in case  use helper functions as much as possible so you can write different parts of the algorithm in different parts of the board and keep track of what parts do what  PRACTICE THIS is you know you're going to have to do it - it's really weird and different from writing code on your laptop", 
            "title": "Answering technical questions"
        }, 
        {
            "location": "/Interviews/general_interview/", 
            "text": "General interview advice\n\n\nIf you're looking for advice on something not covered in the other files in this folder, \nopen an issue\n to ask it and I'll add the answer here! (or in the other pages if it's relevant)\n\n\nIf you'd like to ask a question anonymously, or just less publicly, you can also fill out \nthis form", 
            "title": "General interview"
        }, 
        {
            "location": "/Interviews/general_interview/#general-interview-advice", 
            "text": "If you're looking for advice on something not covered in the other files in this folder,  open an issue  to ask it and I'll add the answer here! (or in the other pages if it's relevant)  If you'd like to ask a question anonymously, or just less publicly, you can also fill out  this form", 
            "title": "General interview advice"
        }, 
        {
            "location": "/Interviews/preparing_for_interviews/", 
            "text": "Preparing for interivews\n\n\nThere are lots of resources out there to learn more about how to prepare for technical interviews, so I'm just gonna mostly link to resources here (see below). A lot of this stuff feels like a game - you just have to know the rules, the patterns, develop certain skills from repetition. Once you understand the game, you can play it well. You just have to \nknow how\n.\n\n\nBe prepared to:\n\n\n\n\ntalk about past experience (projects, work)\n\n\nwhat you did\n\n\nwhat you liked\n\n\nwhat you didn't like\n\n\na technical problem you encountered and how you fixed it\n\n\ntalk about and work towards writing an algorithm to solve a problem, during the interview\n\n\nyou can also expect a \u201ctell me about yourself\u201d question (so be prepared!) and some time where they tell you about their company\n\n\n\n\nPractice makes perfect!\n\n\nBut \nplease please please\n don't overdo it. It's so easy to feel like you can just keep preparing and studying and getting better - you can sink hours and hours and days and weeks into this, and it's not worth it. Being happy, spending time with friends, doing your assignments, etc are all very important. Definitely practice, it will help you feel more comfortable. But don't let it take over your life.\n\n\nIf you can find friends or friendly people who are willing to interview you to help you practice, that is very valuable. Practice talking out loud and going through a problem from beginning to end.\n\n\nResources:\n\n\nTutorials\n\n\n\n\nhttps://www.hackerrank.com/domains/tutorials/cracking-the-coding-interview\n\n\nCracking the coding interivew \npdf to old version\n or you can buy it\n\n\n\n\nPractice coding questions\n\n\n\n\nhttps://www.hackerrank.com/dashboard\n\n\nhttps://leetcode.com/", 
            "title": "Preparing for interviews"
        }, 
        {
            "location": "/Interviews/preparing_for_interviews/#preparing-for-interivews", 
            "text": "There are lots of resources out there to learn more about how to prepare for technical interviews, so I'm just gonna mostly link to resources here (see below). A lot of this stuff feels like a game - you just have to know the rules, the patterns, develop certain skills from repetition. Once you understand the game, you can play it well. You just have to  know how .  Be prepared to:   talk about past experience (projects, work)  what you did  what you liked  what you didn't like  a technical problem you encountered and how you fixed it  talk about and work towards writing an algorithm to solve a problem, during the interview  you can also expect a \u201ctell me about yourself\u201d question (so be prepared!) and some time where they tell you about their company", 
            "title": "Preparing for interivews"
        }, 
        {
            "location": "/Interviews/preparing_for_interviews/#practice-makes-perfect", 
            "text": "But  please please please  don't overdo it. It's so easy to feel like you can just keep preparing and studying and getting better - you can sink hours and hours and days and weeks into this, and it's not worth it. Being happy, spending time with friends, doing your assignments, etc are all very important. Definitely practice, it will help you feel more comfortable. But don't let it take over your life.  If you can find friends or friendly people who are willing to interview you to help you practice, that is very valuable. Practice talking out loud and going through a problem from beginning to end.", 
            "title": "Practice makes perfect!"
        }, 
        {
            "location": "/Interviews/preparing_for_interviews/#resources", 
            "text": "Tutorials   https://www.hackerrank.com/domains/tutorials/cracking-the-coding-interview  Cracking the coding interivew  pdf to old version  or you can buy it   Practice coding questions   https://www.hackerrank.com/dashboard  https://leetcode.com/", 
            "title": "Resources:"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/", 
            "text": "Questions to ask the interviewer\n\n\nAt the end of an interview, you're often asked if you have any questions for \nthem\n. Here are some of my favourite things to ask:\n\n\nDoes your company have code review?\n\n\nCode review is the stage between you writing code and it becoming part of a codebase. I've had code review at every internship I've done, and it has helped me become a much better engineer. It helps me write better code which is more likely to stick around longer. Companies with code review have nicer code in general, which means when I change other people's code it's much more enjoyable. Lastly, when \nI\n get the chance to review other employee's code it's helped me feel like part of the team.\n\n\nDoes your code have unit tests?\n\n\nWhen you're starting out and have no idea what most of their code does yet, it'll be nice to run tests and make sure you're not breaking things you're not aware of.\n\n\nDoes your company have 1:1s? In general, what does mentorship look like?\n\n\nAt all my interships, I've had weekly 1:1s with someone who is in charge of making sure I'm having a good time and learning and stuff. I've learned so much from these conversations and they've been the highlight of my week at some internships. They also really help make sure everyone's communicating well - that I'm doing the best job I can, that my mentor is providing me with the help I need, that I'm working on things that I like, etc.\n\n\nHow is it decided what someone on the team works on next?\n\n\nTask tracking, choice in picking tasks, how often people work on something new, how progress is measured, how often do people check in with each other - this all gives me an idea of how the team works and what it might be like for me.\n\n\nHow much choice does an intern get in what they work on? What are the similarities and differences in how they're treated vs. full time engineers?\n\n\nI've had a really great time at companies where I'm treated more like a full time engineer. I like being trusted with real work and working on things that are important. I also like getting choice on what I work on, because that optimizes my chances of looking forward to going to work.\n\n\nHow are stress levels / working hours? What things are done to support employee's health?\n\n\nMy mental health is important to me. I hope it's important to them too.\n\n\nWhy did you decide to work here?\n\n\nIn general, I'm curious why people like this company and if reasons they would work there are similar to reasons I'd work there. If they are, that's a plus for me - but if not, we might just be different people so it's not necessarily a negative thing.\n\n\nWhat are you excited about that's going on at your company right now? (product, team culture, engineering things) and what are you excited about that's coming up in the future?\n\n\nThis gives me an idea of what cool things are going on and what I might get to be a part of when I get there :)\n\n\nDoes your company sponsor visas?\n\n\nIf they're a US company, since I'm Canadian I'd need them to sponsor a J1 visa for me. I make sure to ask this early on so I'm not wasting time if they can't hire me.\n\n\nIs your product accessible? How usable is the project by folks who are blind or deaf or have low internet access?\n\n\nA lot of smaller companies aren't able to focus on these things right away, but I hope that they at least care about and are keeping it in mind in how they're building things now, so that eventually they can have a very accessibile product.\n\n\nHow do you decide what the company is working on (e.g. what's built next, or what technology is being used)? Who gets input into these decisions?\n\n\nIt's really fun when I get to help make big decisions or have influence on people who make the decisions. This is easier at a smaller company though.\n\n\n[Something related to their company]\n\n\nIt's nice to have a question that's totally related to something they do that I'm curious about and want clarification on - it also shows I know stuff about them.", 
            "title": "Questions to ask the interviewer"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#questions-to-ask-the-interviewer", 
            "text": "At the end of an interview, you're often asked if you have any questions for  them . Here are some of my favourite things to ask:", 
            "title": "Questions to ask the interviewer"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#does-your-company-have-code-review", 
            "text": "Code review is the stage between you writing code and it becoming part of a codebase. I've had code review at every internship I've done, and it has helped me become a much better engineer. It helps me write better code which is more likely to stick around longer. Companies with code review have nicer code in general, which means when I change other people's code it's much more enjoyable. Lastly, when  I  get the chance to review other employee's code it's helped me feel like part of the team.", 
            "title": "Does your company have code review?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#does-your-code-have-unit-tests", 
            "text": "When you're starting out and have no idea what most of their code does yet, it'll be nice to run tests and make sure you're not breaking things you're not aware of.", 
            "title": "Does your code have unit tests?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#does-your-company-have-11s-in-general-what-does-mentorship-look-like", 
            "text": "At all my interships, I've had weekly 1:1s with someone who is in charge of making sure I'm having a good time and learning and stuff. I've learned so much from these conversations and they've been the highlight of my week at some internships. They also really help make sure everyone's communicating well - that I'm doing the best job I can, that my mentor is providing me with the help I need, that I'm working on things that I like, etc.", 
            "title": "Does your company have 1:1s? In general, what does mentorship look like?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#how-is-it-decided-what-someone-on-the-team-works-on-next", 
            "text": "Task tracking, choice in picking tasks, how often people work on something new, how progress is measured, how often do people check in with each other - this all gives me an idea of how the team works and what it might be like for me.", 
            "title": "How is it decided what someone on the team works on next?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#how-much-choice-does-an-intern-get-in-what-they-work-on-what-are-the-similarities-and-differences-in-how-theyre-treated-vs-full-time-engineers", 
            "text": "I've had a really great time at companies where I'm treated more like a full time engineer. I like being trusted with real work and working on things that are important. I also like getting choice on what I work on, because that optimizes my chances of looking forward to going to work.", 
            "title": "How much choice does an intern get in what they work on? What are the similarities and differences in how they're treated vs. full time engineers?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#how-are-stress-levels-working-hours-what-things-are-done-to-support-employees-health", 
            "text": "My mental health is important to me. I hope it's important to them too.", 
            "title": "How are stress levels / working hours? What things are done to support employee's health?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#why-did-you-decide-to-work-here", 
            "text": "In general, I'm curious why people like this company and if reasons they would work there are similar to reasons I'd work there. If they are, that's a plus for me - but if not, we might just be different people so it's not necessarily a negative thing.", 
            "title": "Why did you decide to work here?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#what-are-you-excited-about-thats-going-on-at-your-company-right-now-product-team-culture-engineering-things-and-what-are-you-excited-about-thats-coming-up-in-the-future", 
            "text": "This gives me an idea of what cool things are going on and what I might get to be a part of when I get there :)", 
            "title": "What are you excited about that's going on at your company right now? (product, team culture, engineering things) and what are you excited about that's coming up in the future?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#does-your-company-sponsor-visas", 
            "text": "If they're a US company, since I'm Canadian I'd need them to sponsor a J1 visa for me. I make sure to ask this early on so I'm not wasting time if they can't hire me.", 
            "title": "Does your company sponsor visas?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#is-your-product-accessible-how-usable-is-the-project-by-folks-who-are-blind-or-deaf-or-have-low-internet-access", 
            "text": "A lot of smaller companies aren't able to focus on these things right away, but I hope that they at least care about and are keeping it in mind in how they're building things now, so that eventually they can have a very accessibile product.", 
            "title": "Is your product accessible? How usable is the project by folks who are blind or deaf or have low internet access?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#how-do-you-decide-what-the-company-is-working-on-eg-whats-built-next-or-what-technology-is-being-used-who-gets-input-into-these-decisions", 
            "text": "It's really fun when I get to help make big decisions or have influence on people who make the decisions. This is easier at a smaller company though.", 
            "title": "How do you decide what the company is working on (e.g. what's built next, or what technology is being used)? Who gets input into these decisions?"
        }, 
        {
            "location": "/Interviews/questions_to_ask_the interviewer/#something-related-to-their-company", 
            "text": "It's nice to have a question that's totally related to something they do that I'm curious about and want clarification on - it also shows I know stuff about them.", 
            "title": "[Something related to their company]"
        }, 
        {
            "location": "/other/waterloo_specific/", 
            "text": "Waterloo specific advice\n\n\nUsing Waterloo Works\n\n\n\n\nput \"education\" at the bottom of your resume, since everyone's resume will say Waterloo\n\n\ndisregard most of what PD1 says about resumes, it's not relevant to the tech industry. check out my page on resume stuff instead (and ask around to other technical people too!)\n\n\nunless you have experience in the industry you should probably apply to 50+ jobs. I mean it. I know people that applied to 50 and got fewer than 5 interviews (or none at all)\u200a\u2014\u200avery common for first year. Take all the opportunities you can get.\n\n\ngetting no interviews sucks, but... so does getting too many. It's very overwhelming to have several interviews a week while also having assignments and midterms. It's really hard to judge how many interviews you'll get, but keep this in mind too when you're applying.\n\n\nthe best interview slots (or so I've heard) are 2nd (once they get their shit together, but before they get too bored) and right after lunch\n\n\nthe worst slot is at the end of the day - interviewing 10+ people is really tiring\n\n\nwatch your email frequently so you can pick good interview slots as soon as you're selected\n\n\nyou can find jobs outside of Waterloo Works, but if you get an offer make sure you tell CECA about it before ranking!! or else CECA will get pretty mad and might kick you out of Waterloo Works for a term\n\n\n\n\nFinding jobs outside of Waterloo Works\n\n\n\n\nmake sure they sponsor visas if they're outside Canada\n\n\nthe Waterloo name will help you - make sure you put that front in center in trying to connect with recruiters and stuff\n\n\nsome companies will hire outside of the summer time - summer is when most jobs are, but a lot of companies plan to hire in other terms or will be open to hire if you ask!", 
            "title": "Waterloo specific"
        }, 
        {
            "location": "/other/waterloo_specific/#waterloo-specific-advice", 
            "text": "Using Waterloo Works   put \"education\" at the bottom of your resume, since everyone's resume will say Waterloo  disregard most of what PD1 says about resumes, it's not relevant to the tech industry. check out my page on resume stuff instead (and ask around to other technical people too!)  unless you have experience in the industry you should probably apply to 50+ jobs. I mean it. I know people that applied to 50 and got fewer than 5 interviews (or none at all)\u200a\u2014\u200avery common for first year. Take all the opportunities you can get.  getting no interviews sucks, but... so does getting too many. It's very overwhelming to have several interviews a week while also having assignments and midterms. It's really hard to judge how many interviews you'll get, but keep this in mind too when you're applying.  the best interview slots (or so I've heard) are 2nd (once they get their shit together, but before they get too bored) and right after lunch  the worst slot is at the end of the day - interviewing 10+ people is really tiring  watch your email frequently so you can pick good interview slots as soon as you're selected  you can find jobs outside of Waterloo Works, but if you get an offer make sure you tell CECA about it before ranking!! or else CECA will get pretty mad and might kick you out of Waterloo Works for a term   Finding jobs outside of Waterloo Works   make sure they sponsor visas if they're outside Canada  the Waterloo name will help you - make sure you put that front in center in trying to connect with recruiters and stuff  some companies will hire outside of the summer time - summer is when most jobs are, but a lot of companies plan to hire in other terms or will be open to hire if you ask!", 
            "title": "Waterloo specific advice"
        }
    ]
}